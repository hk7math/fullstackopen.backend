{"version":3,"sources":["components/Notification.js","components/Filter.js","components/PersonForm.js","components/Persons.js","services/phonebook.js","App.js","index.js"],"names":["Notification","text","msgStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","Filter","search","setSearch","value","onChange","e","target","PersonForm","newName","setNewName","newNumber","setNewNumber","addName","type","onClick","Persons","personsToShow","handleClick","map","name","number","id","key","baseUrl","axios","get","then","res","data","newPerson","post","delete","put","App","useState","persons","setPersons","message","setMessage","useEffect","phonebook","filter","person","toLowerCase","indexOf","afterAction","msg","setInterval","preventDefault","trim","samePerson","length","window","confirm","resPerson","catch","error","response","concat","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5316831f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Notification = ({ text, color }) => {\r\n  const msgStyle = {\r\n    color,\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10\r\n  }\r\n  return (\r\n    <div style={ msgStyle }>\r\n      { text }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Filter = ({ search, setSearch }) => \r\n  <div>\r\n    filter shown with <input value={search} onChange={(e) => setSearch(e.target.value)}></input>\r\n  </div>\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ newName, setNewName, newNumber, setNewNumber, addName }) => \r\n  <form>\r\n    <div>\r\n      name: <input value={newName} onChange={(e) => setNewName(e.target.value)}/>\r\n    </div>\r\n    <div>\r\n      number: <input value={newNumber} onChange={(e) => setNewNumber(e.target.value)}/>\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\" onClick={addName}>add</button>\r\n    </div>\r\n  </form>\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({ personsToShow, handleClick }) => \r\n  <div>\r\n    {personsToShow.map( ({ name, number, id }) => \r\n      <div key={ name }>\r\n        { name } { number } \r\n        <button onClick={ () => handleClick( id ) }>delete</button>\r\n      </div>\r\n    )}\r\n  </div>\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then( res => res.data )\r\n}\r\n\r\nconst addPerson = newPerson => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  return request.then( res => res.data )\r\n}\r\n\r\nconst deletePerson = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then( res => res.data )  \r\n}\r\n\r\nconst updatePerson = (id, newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n  return request.then( res => res.data )\r\n}\r\n\r\nexport default { getAll, addPerson, deletePerson, updatePerson }","import React, { useState, useEffect } from 'react'\r\nimport Notification from './components/Notification'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport phonebook from './services/phonebook'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ search, setSearch ] = useState('')\r\n  const [ message, setMessage ] = useState({})\r\n\r\n  useEffect( () => {\r\n    phonebook\r\n      .getAll()\r\n      .then( res => {\r\n        setPersons( res )\r\n      })\r\n  },[])\r\n  \r\n  const personsToShow = persons.filter( person =>\r\n    person.name.toLowerCase().indexOf( search.toLowerCase() ) > -1\r\n  )\r\n\r\n  const addName = e => {\r\n    e.preventDefault()\r\n    const name = newName.trim()\r\n    const number = newNumber.trim()\r\n    const samePerson = persons.filter( person => person.name === name )\r\n    if ( samePerson.length ){\r\n      if ( window.confirm(`${ name } is already added to phonebook, replace the old number with a new one?`)) {\r\n        const newPerson = { ...samePerson[0], number }\r\n        phonebook\r\n          .updatePerson( newPerson.id, newPerson)\r\n          .then( resPerson => {\r\n            setPersons( persons.map( person => \r\n              person.id !== resPerson.id\r\n              ? person\r\n              : resPerson\r\n            ))\r\n            afterAction({\r\n              text: `Updated ${ resPerson.name }`,\r\n              color: 'green'\r\n            })\r\n          })\r\n          .catch( error => {\r\n            afterAction({\r\n              text: error.response.data.error,\r\n              color: 'red'\r\n            })\r\n          })\r\n      }\r\n    } else {\r\n      const newPerson = { name, number }\r\n      phonebook\r\n        .addPerson( newPerson )\r\n        .then( resPerson => {\r\n          setPersons( persons.concat( resPerson ))\r\n          afterAction({\r\n            text: `Added ${ resPerson.name }`,\r\n            color: 'green'\r\n          })\r\n        })\r\n        .catch( error => {\r\n          afterAction({\r\n            text: error.response.data.error,\r\n            color: 'red'\r\n          })\r\n        })\r\n      }\r\n    }\r\n    \r\n  const afterAction = msg => {  \r\n    setNewName('')\r\n    setNewNumber('')\r\n    setMessage( msg )\r\n    setInterval( () => {\r\n      setMessage('')\r\n    }, 2000)\r\n  }\r\n\r\n  const delName = id => {\r\n    const target = persons.find( person => person.id === id ).name\r\n    if ( window.confirm(`Delete ${target}?`) ){\r\n      phonebook\r\n        .deletePerson( id )\r\n        .then( res => {\r\n          setPersons( persons.filter( person => person.id !== id ) )\r\n        })\r\n        .catch( error => {\r\n          afterAction({\r\n            text: error.response.data.error,\r\n            color: 'red'\r\n          })\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      { message.text && <Notification text={message.text} color={message.color} /> }\r\n      <Filter search = { search } setSearch = { setSearch }/>\r\n\r\n      <h3>add a new</h3>\r\n      <PersonForm \r\n        newName = { newName }\r\n        setNewName = { setNewName }\r\n        newNumber = { newNumber }\r\n        setNewNumber = { setNewNumber }\r\n        addName = { addName }\r\n      />\r\n      \r\n      <h3>Numbers</h3>\r\n      <Persons \r\n        personsToShow = { personsToShow } \r\n        handleClick = { delName }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}